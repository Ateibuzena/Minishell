# Variables
CC = clang
CFLAGS = -Wall -Wextra -Werror -g

LIBFT_DIR = ../libft
LIBFT = $(LIBFT_DIR)/libft.a

HISTORY_DIR = ../history
HISTORY_LIB = $(HISTORY_DIR)/history.a

ENVIROMENT_DIR = ../enviroment
ENVIROMENT_LIB = $(ENVIROMENT_DIR)/enviroment.a

TOKENS_DIR = ../tokens
TOKENS_LIB = $(TOKENS_DIR)/tokens.a

BUILTINS_DIR = ../builtins
BUILTINS_LIB = $(BUILTINS_DIR)/builtins.a

PIPEX_DIR = ../pipex
PIPEX_LIB = $(PIPEX_DIR)/pipex.a

PROMPT_DIR = ../prompt
PROMPT_LIB = $(PROMPT_DIR)/prompt.a

INCLUDES = -I$(LIBFT_DIR) -I$(HISTORY_DIR) -I$(BUILTINS_DIR) -I$(TOKENS_DIR) -I$(ENVIROMENT_DIR) -I$(PROMPT_DIR) -I$(PIPEX_DIR)

SRC_DIR = ./src
SRCS = $(SRC_DIR)/main.c \
       $(SRC_DIR)/minishell_utils.c \
       $(SRC_DIR)/signals.c

# Aquí incluimos los .c de las sublibrerías
LIBFT_SRCS = $(LIBFT_DIR)/d_ascii/ft_isspace.c $(LIBFT_DIR)/d_ascii/ft_isalpha.c \
				$(LIBFT_DIR)/d_ascii/ft_isdigit.c $(LIBFT_DIR)/d_ascii/ft_isalnum.c \
				$(LIBFT_DIR)/d_ascii/ft_isascii.c $(LIBFT_DIR)/d_ascii/ft_isprint.c \
				$(LIBFT_DIR)/d_ascii/ft_toupper.c $(LIBFT_DIR)/d_ascii/ft_tolower.c \
				$(LIBFT_DIR)/d_memory/ft_calloc.c $(LIBFT_DIR)/d_memory/ft_memset.c \
				$(LIBFT_DIR)/d_memory/ft_bzero.c $(LIBFT_DIR)/d_memory/ft_memcpy.c \
				$(LIBFT_DIR)/d_memory/ft_memmove.c $(LIBFT_DIR)/d_memory/ft_memchr.c \
				$(LIBFT_DIR)/d_memory/ft_memcmp.c \
				$(LIBFT_DIR)/d_strings/ft_strtol.c $(LIBFT_DIR)/d_strings/ft_strncpy.c \
				$(LIBFT_DIR)/d_strings/ft_strcmp.c $(LIBFT_DIR)/d_strings/ft_strlen.c \
				$(LIBFT_DIR)/d_strings/ft_strlcpy.c $(LIBFT_DIR)/d_strings/ft_strlcat.c \
				$(LIBFT_DIR)/d_strings/ft_strchr.c $(LIBFT_DIR)/d_strings/ft_strrchr.c \
				$(LIBFT_DIR)/d_strings/ft_strncmp.c $(LIBFT_DIR)/d_strings/ft_strnstr.c \
				$(LIBFT_DIR)/d_strings/ft_strmapi.c $(LIBFT_DIR)/d_strings/ft_striteri.c \
				$(LIBFT_DIR)/d_strings/ft_strdup.c $(LIBFT_DIR)/d_strings/ft_substr.c \
				$(LIBFT_DIR)/d_strings/ft_strjoin.c $(LIBFT_DIR)/d_strings/ft_strtrim.c \
				$(LIBFT_DIR)/d_strings/ft_strndup.c $(LIBFT_DIR)/d_strings/ft_strstr.c \
				$(LIBFT_DIR)/d_strings/ft_strcat.c $(LIBFT_DIR)/d_strings/ft_strcpy.c \
				$(LIBFT_DIR)/d_fds/ft_putchar_fd.c $(LIBFT_DIR)/d_fds/ft_putstr_fd.c \
				$(LIBFT_DIR)/d_fds/ft_putendl_fd.c $(LIBFT_DIR)/d_fds/ft_putnbr_fd.c \
				$(LIBFT_DIR)/d_get_next_line/get_next_line_utils.c \
				$(LIBFT_DIR)/d_get_next_line/get_next_line_utils_bonus.c \
				$(LIBFT_DIR)/d_get_next_line/get_next_line.c \
				$(LIBFT_DIR)/d_get_next_line/get_next_line_bonus.c \
				$(LIBFT_DIR)/d_printf/ft_puthex_lower.c $(LIBFT_DIR)/d_printf/ft_putnbr_u.c \
				$(LIBFT_DIR)/d_printf/ft_puthex_nil.c $(LIBFT_DIR)/d_printf/ft_putstr_printf.c \
				$(LIBFT_DIR)/d_printf/ft_putchar_percent.c $(LIBFT_DIR)/d_printf/ft_puthex_upper.c \
				$(LIBFT_DIR)/d_printf/ft_putchar_printf.c $(LIBFT_DIR)/d_printf/ft_putnbr_printf.c \
				$(LIBFT_DIR)/ft_split.c $(LIBFT_DIR)/ft_strlen_double.c $(LIBFT_DIR)/ft_atoi.c $(LIBFT_DIR)/ft_itoa.c \
				$(LIBFT_DIR)/ft_printf.c $(LIBFT_DIR)/ft_freedouble.c \
				$(LIBFT_DIR)/d_lists/ft_lstnew.c $(LIBFT_DIR)/d_lists/ft_lstadd_front.c \
				$(LIBFT_DIR)/d_lists/ft_lstsize.c $(LIBFT_DIR)/d_lists/ft_lstlast.c \
				$(LIBFT_DIR)/d_lists/ft_lstadd_back.c $(LIBFT_DIR)/d_lists/ft_lstdelone.c \
				$(LIBFT_DIR)/d_lists/ft_lstclear.c $(LIBFT_DIR)/d_lists/ft_lstiter.c \
				$(LIBFT_DIR)/d_lists/ft_lstmap.c

HISTORY_SRCS = $(HISTORY_DIR)/history_utils.c\
				$(HISTORY_DIR)/history_free.c\
				$(HISTORY_DIR)/history_init.c
			
TOKENS_SRCS = $(TOKENS_DIR)/tokens_group_split.c\
				$(TOKENS_DIR)/tokens_utils_split.c\
				$(TOKENS_DIR)/tokens_utils_group.c\
				$(TOKENS_DIR)/ft_snprintf.c

BUILTINS_SRCS = $(BUILTINS_DIR)/builtins_cd.c\
				$(BUILTINS_DIR)/builtins_clear.c\
				$(BUILTINS_DIR)/builtins_echo.c\
				$(BUILTINS_DIR)/builtins_pwd.c\
				$(BUILTINS_DIR)/builtins_env.c\
				$(BUILTINS_DIR)/builtins_exit.c\
				$(BUILTINS_DIR)/builtins_unset.c\
				$(BUILTINS_DIR)/builtins_export.c\
				$(BUILTINS_DIR)/builtins_execute.c\
				$(BUILTINS_DIR)/ft_strtok.c

PIPEX_SRCS = $(PIPEX_DIR)/pipex_execute.c\
				$(PIPEX_DIR)/pipex_process.c\
				$(PIPEX_DIR)/pipex_utils.c\
				$(PIPEX_DIR)/pipex_init.c\
				$(PIPEX_DIR)/pipex_error.c\
				$(PIPEX_DIR)/pipex.c

PROMPT_SRCS = $(PROMPT_DIR)/prompt_build.c\
				$(PROMPT_DIR)/prompt_session.c\
				$(PROMPT_DIR)/prompt_user.c

ENVIROMENT_SRCS = $(ENVIROMENT_DIR)/enviroment_free.c\
					$(ENVIROMENT_DIR)/enviroment_init.c\
					$(ENVIROMENT_DIR)/enviroment_utils.c

OBJ_DIR = ./obj
OBJS = $(SRCS:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)\
       $(LIBFT_SRCS:$(LIBFT_DIR)/%.c=$(LIBFT_DIR)/obj/%.o)\
       $(HISTORY_SRCS:$(HISTORY_DIR)/%.c=$(HISTORY_DIR)/obj/%.o)\
       $(TOKENS_SRCS:$(TOKENS_DIR)/%.c=$(TOKENS_DIR)/obj/%.o) \
	   $(ENVIROMENT_SRCS:$(ENVIROMENT_DIR)/%.c=$(ENVIROMENT_DIR)/obj/%.o)\
       $(BUILTINS_SRCS:$(BUILTINS_DIR)/%.c=$(BUILTINS_DIR)/obj/%.o)\
       $(PIPEX_SRCS:$(PIPEX_DIR)/%.c=$(PIPEX_DIR)/obj/%.o)\
       $(PROMPT_SRCS:$(PROMPT_DIR)/%.c=$(PROMPT_DIR)/obj/%.o)


NAME = minishell

# Colors
RED      = \033[0;31m
GREEN    = \033[0;32m
YELLOW   = \033[0;33m
CYAN     = \033[0;36m
RESET    = \033[0m

all: $(NAME)

$(NAME): $(OBJ_DIR) $(PIPEX_LIB) $(PROMPT_LIB) $(TOKENS_LIB) $(BUILTINS_LIB) $(ENVIROMENT_LIB) $(HISTORY_LIB) $(LIBFT) $(OBJS)
	@printf "$(CYAN)[Building Main] Creating $(NAME)...\n$(RESET)"
	@$(CC) $(OBJS) $(PIPEX_LIB) $(PROMPT_LIB) $(TOKENS_LIB) $(BUILTINS_LIB) $(ENVIROMENT_LIB) $(HISTORY_LIB) $(LIBFT) -o $(NAME) -lreadline -lncurses
	@printf "$(GREEN)[Success] $(NAME) created successfully!\n$(RESET)"

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c | $(OBJ_DIR)
	@mkdir -p $(dir $@)
	@printf "$(YELLOW)[Compiling]$(RESET) $<\n"
	@$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

$(OBJ_DIR):
	@printf "$(CYAN)[Directory] Creating object directory $(OBJ_DIR)...\n$(RESET)"
	@mkdir -p $(OBJ_DIR)

$(PIPEX_LIB):
	@printf "$(CYAN)[Building Pipex] Compiling pipex.a...\n$(RESET)"
	@$(MAKE) -C $(PIPEX_DIR)
	@printf "$(GREEN)[Pipex Ready] Pipex library compiled successfully!\n$(RESET)"

$(PROMPT_LIB):
	@printf "$(CYAN)[Building Prompt] Compiling prompt.a...\n$(RESET)"
	@$(MAKE) -C $(PROMPT_DIR)
	@printf "$(GREEN)[Prompt Ready] Prompt library compiled successfully!\n$(RESET)"

$(TOKENS_LIB):
	@printf "$(CYAN)[Building Builtins] Compiling tokens.a...\n$(RESET)"
	@$(MAKE) -C $(TOKENS_DIR)
	@printf "$(GREEN)[Builtins Ready] Tokens library compiled successfully!\n$(RESET)"

$(BUILTINS_LIB):
	@printf "$(CYAN)[Building Builtins] Compiling builtins.a...\n$(RESET)"
	@$(MAKE) -C $(BUILTINS_DIR)
	@printf "$(GREEN)[Builtins Ready] Builtins library compiled successfully!\n$(RESET)"

$(ENVIROMENT_LIB):
	@printf "$(CYAN)[Building Enviroment] Compiling enviroment.a...\n$(RESET)"
	@$(MAKE) -C $(ENVIROMENT_DIR)
	@printf "$(GREEN)[Enviroment Ready] Enviroment library compiled successfully!\n$(RESET)"

$(HISTORY_LIB):
	@printf "$(CYAN)[Building History] Compiling history.a...\n$(RESET)"
	@$(MAKE) -C $(HISTORY_DIR)
	@printf "$(GREEN)[History Ready] History library compiled successfully!\n$(RESET)"

$(LIBFT):
	@printf "$(CYAN)[Building Libft] Compiling libft.a...\n$(RESET)"
	@$(MAKE) -C $(LIBFT_DIR)
	@printf "$(GREEN)[Libft Ready] Libft compiled successfully!\n$(RESET)"

clean:
	@printf "$(RED)[Cleaning] Removing object files...\n$(RESET)"
	@rm -rf $(OBJ_DIR)
	@$(MAKE) -C $(LIBFT_DIR) clean
	@$(MAKE) -C $(HISTORY_DIR) clean
	@$(MAKE) -C $(BUILTINS_DIR) clean
	@$(MAKE) -C $(TOKENS_DIR) clean
	@$(MAKE) -C $(ENVIROMENT_DIR) clean
	@$(MAKE) -C $(PROMPT_DIR) clean
	@$(MAKE) -C $(PIPEX_DIR) clean
	@printf "$(GREEN)[Cleaned] Object files removed successfully!\n$(RESET)"

fclean: clean
	@printf "$(RED)[Full Clean] Removing binaries and libraries...\n$(RESET)"
	@$(MAKE) -C $(LIBFT_DIR) fclean
	@$(MAKE) -C $(HISTORY_DIR) fclean
	@$(MAKE) -C $(BUILTINS_DIR) fclean
	@$(MAKE) -C $(TOKENS_DIR) fclean
	@$(MAKE) -C $(ENVIROMENT_DIR) fclean
	@$(MAKE) -C $(PROMPT_DIR) fclean
	@$(MAKE) -C $(PIPEX_DIR) fclean
	@rm -f $(NAME)
	@printf "$(GREEN)[Cleaned] All binaries and libraries removed successfully!\n$(RESET)"

re: fclean all

.PHONY: all clean fclean re