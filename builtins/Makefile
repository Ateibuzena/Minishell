NAME = builtins.a

CC = gcc

CFLAGS = -Wall -Wextra -Werror -I. -I../enviroment -I../history -I../libft 

AR = ar rcs
RM = rm -f

# üìÇ Librer√≠as externas
ENVIROMENT_DIR = ../enviroment
ENVIROMENT_LIB = $(ENVIROMENT_DIR)/enviroment.a

HISTORY_DIR = ../history
HISTORY_LIB = $(HISTORY_DIR)/history.a

LIBFT_DIR = ../libft
LIBFT_LIB = $(LIBFT_DIR)/libft.a

# üìÇ Directorios de c√≥digo y objetos
SRCDIR = src
SRCS = $(wildcard $(SRCDIR)/*.c)

OBJDIR = obj
OBJS = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SRCS))

HEADERS = builtinsft.h

# üé® Colores
RED      = \033[0;31m
GREEN    = \033[0;32m
YELLOW   = \033[0;33m
MAGENTA  = \033[0;35m
CYAN     = \033[0;36m
WHITE    = \033[0;37m
RESET    = \033[0m

# üöÄ Compilaci√≥n principal
all: $(LIBFT_LIB) $(ENVIROMENT_LIB) $(HISTORY_LIB) $(NAME)

# üîó Compilar librer√≠as en orden correcto
$(LIBFT_LIB):
	@echo "$(CYAN)üì¶ Compilando librer√≠a libft...$(RESET)"
	@make -C $(LIBFT_DIR)
	@echo "$(GREEN)‚úÖ Librer√≠a libft compilada.$(RESET)"

$(HISTORY_LIB): $(LIBFT_LIB)
	@echo "$(CYAN)üì¶ Compilando librer√≠a history...$(RESET)"
	@make -C $(HISTORY_DIR)
	@echo "$(GREEN)‚úÖ Librer√≠a history compilada.$(RESET)"

$(ENVIROMENT_LIB): $(LIBFT_LIB)
	@echo "$(CYAN)üì¶ Compilando librer√≠a enviroment...$(RESET)"
	@make -C $(ENVIROMENT_DIR)
	@echo "$(GREEN)‚úÖ Librer√≠a enviroment compilada.$(RESET)"

# üî® Crear archivo .a (builtins.a)
$(NAME): $(OBJDIR) $(OBJS)
	@echo "$(CYAN)üîó Creando $(NAME)...$(RESET)"
	@$(AR) $(NAME) $(OBJS)
	@echo "$(GREEN)‚úÖ $(NAME) creado con √©xito.$(RESET)"

# üìÇ Crear directorio de objetos
$(OBJDIR):
	@echo "$(CYAN)üìÇ Creando directorios de objetos...$(RESET)"
	@mkdir -p $(OBJDIR)
	@echo "$(GREEN)‚úÖ Directorios de objetos creados.$(RESET)"

# üèó Compilar archivos `.c` en `.o`, respetando subdirectorios
$(OBJDIR)/%.o: $(SRCDIR)/%.c $(HEADERS) | $(OBJDIR)
	@mkdir -p $(dir $@)
	@echo "$(YELLOW)üîπ Compilando $< -> $@$(RESET)"
	@$(CC) $(CFLAGS) -c $< -o $@
	@echo "$(GREEN)‚úÖ Compilado: $@$(RESET)"

# üßπ Limpieza de objetos
clean:
	@echo "$(RED)üóëÔ∏è  Eliminando archivos objeto...$(RESET)"
	@$(RM) $(OBJS)
	@echo "$(MAGENTA)‚úÖ Limpieza de objetos completada.$(RESET)"
	@if [ -d "$(OBJDIR)" ]; then \
		echo "$(RED)üöÆ Eliminando directorio de objetos...$(RESET)"; \
		$(RM) -rf $(OBJDIR); \
		echo "$(MAGENTA)‚úÖ Directorio obj eliminado.$(RESET)"; \
	fi

# üßπ Limpieza total (elimina objetos y archivo .a)
fclean: clean
	@if [ -f "$(NAME)" ]; then \
		echo "$(RED)üöÆ Eliminando archivo $(NAME)...$(RESET)"; \
		$(RM) $(NAME); \
		echo "$(MAGENTA)‚úÖ $(NAME) eliminado.$(RESET)"; \
	fi
	@if [ -f "$(ENVIROMENT_LIB)" ]; then \
		echo "$(RED)üöÆ Eliminando librer√≠a externa $(ENVIROMENT_LIB)...$(RESET)"; \
		make -C $(ENVIROMENT_DIR) fclean; \
		echo "$(MAGENTA)‚úÖ Librer√≠a $(ENVIROMENT_LIB) eliminada.$(RESET)"; \
	fi
	@if [ -f "$(HISTORY_LIB)" ]; then \
		echo "$(RED)üöÆ Eliminando librer√≠a externa $(HISTORY_LIB)...$(RESET)"; \
		make -C $(HISTORY_DIR) fclean; \
		echo "$(MAGENTA)‚úÖ Librer√≠a $(HISTORY_LIB) eliminada.$(RESET)"; \
	fi
	@if [ -f "$(LIBFT_LIB)" ]; then \
		echo "$(RED)üöÆ Eliminando librer√≠a externa $(LIBFT_LIB)...$(RESET)"; \
		make -C $(LIBFT_DIR) fclean; \
		echo "$(MAGENTA)‚úÖ Librer√≠a $(LIBFT_LIB) eliminada.$(RESET)"; \
	fi

# üîÑ Recompilaci√≥n completa
re: fclean all

.PHONY: all clean fclean re
